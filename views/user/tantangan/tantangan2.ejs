<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Nabung Recehan Challenge</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
        }

        .header h1 {
            color: #4a5568;
            font-size: 2.5em;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
        }

        .header p {
            color: #718096;
            font-size: 1.1em;
            line-height: 1.6;
        }

        .challenge-info {
            background: linear-gradient(135deg, #38b2ac, #319795);
            color: white;
            padding: 20px;
            border-radius: 15px;
            margin-bottom: 30px;
            box-shadow: 0 10px 20px rgba(56, 178, 172, 0.3);
        }

        .challenge-info h3 {
            margin-bottom: 10px;
            font-size: 1.5em;
        }

        .challenge-info p {
            margin-bottom: 10px;
            line-height: 1.6;
        }

        .highlight {
            background: rgba(255, 255, 255, 0.2);
            padding: 10px;
            border-radius: 10px;
            margin: 10px 0;
        }

        .progress-section {
            margin-bottom: 30px;
        }

        .progress-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .total-saved {
            background: linear-gradient(135deg, #48bb78, #38a169);
            color: white;
            padding: 15px 25px;
            border-radius: 50px;
            font-weight: bold;
            font-size: 1.2em;
            box-shadow: 0 5px 15px rgba(72, 187, 120, 0.3);
        }

        .days-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
            gap: 15px;
            margin-bottom: 30px;
        }

        .day-card {
            background: white;
            border: 3px solid #e2e8f0;
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .day-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
            transition: left 0.5s;
        }

        .day-card:hover::before {
            left: 100%;
        }

        .day-card.completed {
            background: linear-gradient(135deg, #48bb78, #38a169);
            color: white;
            border-color: #38a169;
            transform: scale(1.05);
            box-shadow: 0 10px 20px rgba(72, 187, 120, 0.3);
        }

        .day-card.active {
            border-color: #667eea;
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
        }

        .day-number {
            font-size: 1.2em;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .day-amount {
            font-size: 0.9em;
            color: #718096;
        }

        .day-card.completed .day-amount {
            color: rgba(255, 255, 255, 0.9);
        }

        .input-section {
            background: #f7fafc;
            padding: 25px;
            border-radius: 15px;
            margin-bottom: 30px;
            border: 2px solid #e2e8f0;
        }

        .input-group {
            display: flex;
            gap: 15px;
            align-items: end;
            flex-wrap: wrap;
        }

        .input-field {
            flex: 1;
            min-width: 200px;
        }

        .input-field label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #4a5568;
        }

        .input-field input {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            font-size: 1em;
            transition: border-color 0.3s ease;
        }

        .input-field input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .btn {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 10px;
            font-size: 1em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
        }

        .btn:active {
            transform: translateY(0);
        }

        .btn-reset {
            background: linear-gradient(135deg, #f56565, #e53e3e);
            box-shadow: 0 5px 15px rgba(245, 101, 101, 0.3);
        }

        .btn-reset:hover {
            box-shadow: 0 8px 25px rgba(245, 101, 101, 0.4);
        }

        .controls {
            display: flex;
            gap: 15px;
            justify-content: center;
            flex-wrap: wrap;
        }

        .success-message {
            background: linear-gradient(135deg, #48bb78, #38a169);
            color: white;
            padding: 25px;
            border-radius: 15px;
            text-align: center;
            margin-bottom: 20px;
            box-shadow: 0 10px 30px rgba(72, 187, 120, 0.3);
            animation: celebrateSuccess 0.6s ease-out;
        }

        @keyframes celebrateSuccess {
            0% { transform: scale(0.8); opacity: 0; }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); opacity: 1; }
        }

        .success-message h3 {
            font-size: 1.8em;
            margin-bottom: 10px;
        }

        .badge {
            display: inline-block;
            background: rgba(255, 255, 255, 0.2);
            padding: 8px 15px;
            border-radius: 20px;
            margin-top: 10px;
            font-weight: bold;
        }

        .progress-bar {
            background: #e2e8f0;
            height: 12px;
            border-radius: 6px;
            overflow: hidden;
            margin: 20px 0;
        }

        .progress-fill {
            background: linear-gradient(90deg, #667eea, #764ba2);
            height: 100%;
            border-radius: 6px;
            transition: width 0.5s ease;
            position: relative;
        }

        .progress-fill::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(90deg, transparent 0%, rgba(255,255,255,0.3) 50%, transparent 100%);
            animation: shimmer 2s infinite;
        }

        @keyframes shimmer {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
        }

        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }

        .stat-card {
            background: white;
            padding: 20px;
            border-radius: 12px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            border: 2px solid #e2e8f0;
        }

        .stat-number {
            font-size: 2em;
            font-weight: bold;
            color: #667eea;
            margin-bottom: 5px;
        }

        .stat-label {
            color: #718096;
            font-size: 0.9em;
        }

        @media (max-width: 768px) {
            .container {
                padding: 20px;
                margin: 10px;
            }
            
            .header h1 {
                font-size: 2em;
            }
            
            .input-group {
                flex-direction: column;
            }
            
            .controls {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üí∞ Nabung Recehan Challenge</h1>
            <p>Siapa bilang nabung harus jutaan? Mulai dari yang kecil dulu!<br>
            Tantangan ini akan buktikan kalau recehan bisa jadi jutaan kalau konsisten.</p>
        </div>

        <div class="challenge-info">
            <h3>üéØ Aturan Challenge:</h3>
            <p><strong>Target:</strong> Micro-saving minimal Rp 2.000 per hari selama 7 hari berturut-turut</p>
            <div class="highlight">
                <p><strong>‚úÖ Berhasil:</strong> Menyimpan minimal Rp 2.000 setiap hari selama 7 hari penuh (Total minimal Rp 14.000)</p>
                <p><strong>‚ùå Gagal:</strong> Ada hari yang terlewat tanpa nabung, atau total kurang dari Rp 14.000</p>
            </div>
            <p><strong>üèÜ Reward:</strong> Badge "Micro Saver" + 150 poin</p>
        </div>

        <div class="progress-section">
            <div class="progress-header">
                <h3>Progress Challenge</h3>
                <div class="total-saved" id="totalSaved">
                    Total: Rp 0
                </div>
            </div>
            
            <div class="progress-bar">
                <div class="progress-fill" id="progressFill" style="width: 0%"></div>
            </div>
            
            <div class="days-container" id="daysContainer">
                <!-- Days will be generated by JavaScript -->
            </div>
        </div>

        <div class="input-section">
            <div class="input-group">
                <div class="input-field">
                    <label for="daySelect">Pilih Hari:</label>
                    <select id="daySelect">
                        <option value="1">Hari 1</option>
                        <option value="2">Hari 2</option>
                        <option value="3">Hari 3</option>
                        <option value="4">Hari 4</option>
                        <option value="5">Hari 5</option>
                        <option value="6">Hari 6</option>
                        <option value="7">Hari 7</option>
                    </select>
                </div>
                <div class="input-field">
                    <label for="amountInput">Jumlah Nabung (Rp):</label>
                    <input type="number" id="amountInput" placeholder="Minimal 2000" min="0">
                </div>
                <button class="btn" onclick="addSaving()">Tambah Nabung</button>
            </div>
        </div>

        <div class="controls">
            <button class="btn btn-reset" onclick="resetChallenge()">Reset Challenge</button>
            <button class="btn" onclick="checkProgress()">Cek Progress</button>
        </div>

        <div class="stats">
            <div class="stat-card">
                <div class="stat-number" id="daysCompleted">0</div>
                <div class="stat-label">Hari Selesai</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="averageDaily">Rp 0</div>
                <div class="stat-label">Rata-rata Harian</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="progressPercentage">0%</div>
                <div class="stat-label">Progress</div>
            </div>
        </div>

        <div id="successMessage" style="display: none;"></div>
    </div>

    <script>
        // Challenge data stored in memory
        let challengeData = {
            days: [
                { day: 1, amount: 0, completed: false },
                { day: 2, amount: 0, completed: false },
                { day: 3, amount: 0, completed: false },
                { day: 4, amount: 0, completed: false },
                { day: 5, amount: 0, completed: false },
                { day: 6, amount: 0, completed: false },
                { day: 7, amount: 0, completed: false }
            ],
            totalSaved: 0,
            challengeComplete: false
        };

        // Load data on page load
        window.onload = function() {
            renderDays();
            updateStats();
        };

        function renderDays() {
            const container = document.getElementById('daysContainer');
            container.innerHTML = '';

            challengeData.days.forEach(day => {
                const dayCard = document.createElement('div');
                dayCard.className = `day-card ${day.completed ? 'completed' : ''}`;
                dayCard.innerHTML = `
                    <div class="day-number">Hari ${day.day}</div>
                    <div class="day-amount">
                        ${day.amount > 0 ? `Rp ${day.amount.toLocaleString('id-ID')}` : 'Belum nabung'}
                    </div>
                `;
                container.appendChild(dayCard);
            });
        }

        function addSaving() {
            const daySelect = document.getElementById('daySelect');
            const amountInput = document.getElementById('amountInput');
            
            const selectedDay = parseInt(daySelect.value);
            const amount = parseInt(amountInput.value) || 0;

            if (amount < 2000) {
                alert('Minimal nabung Rp 2.000 per hari!');
                return;
            }

            // Update the selected day
            const dayIndex = selectedDay - 1;
            challengeData.days[dayIndex].amount = amount;
            challengeData.days[dayIndex].completed = true;

            // Calculate total
            challengeData.totalSaved = challengeData.days.reduce((total, day) => total + day.amount, 0);

            // Clear input
            amountInput.value = '';

            // Update display
            renderDays();
            updateStats();
            checkChallengeCompletion();
        }

        function updateStats() {
            const completedDays = challengeData.days.filter(day => day.completed).length;
            const averageDaily = completedDays > 0 ? Math.round(challengeData.totalSaved / completedDays) : 0;
            const progressPercentage = Math.round((challengeData.totalSaved / 14000) * 100);

            document.getElementById('totalSaved').textContent = `Total: Rp ${challengeData.totalSaved.toLocaleString('id-ID')}`;
            document.getElementById('daysCompleted').textContent = completedDays;
            document.getElementById('averageDaily').textContent = `Rp ${averageDaily.toLocaleString('id-ID')}`;
            document.getElementById('progressPercentage').textContent = `${Math.min(progressPercentage, 100)}%`;
            
            // Update progress bar
            const progressFill = document.getElementById('progressFill');
            progressFill.style.width = `${Math.min(progressPercentage, 100)}%`;
        }

        function checkChallengeCompletion() {
            const allDaysCompleted = challengeData.days.every(day => day.completed);
            const totalMeetsTarget = challengeData.totalSaved >= 14000;

            if (allDaysCompleted && totalMeetsTarget && !challengeData.challengeComplete) {
                challengeData.challengeComplete = true;
                showSuccessMessage();
            }
        }

        function showSuccessMessage() {
            const successDiv = document.getElementById('successMessage');
            successDiv.innerHTML = `
                <div class="success-message">
                    <h3>üéâ Selamat! Challenge Berhasil!</h3>
                    <p>Kamu berhasil menyelesaikan Nabung Recehan Challenge!</p>
                    <p>Total nabung: <strong>Rp ${challengeData.totalSaved.toLocaleString('id-ID')}</strong></p>
                    <div class="badge">üèÜ Badge "Micro Saver" + 150 Poin</div>
                    <p style="margin-top: 15px; font-size: 0.9em;">
                        Terbukti kan? Recehan yang konsisten bisa jadi jutaan! 
                        Lanjutkan kebiasaan baik ini untuk mencapai impianmu! üí™
                    </p>
                </div>
            `;
            successDiv.style.display = 'block';
        }

        function checkProgress() {
            const completedDays = challengeData.days.filter(day => day.completed).length;
            const remainingDays = 7 - completedDays;
            const targetRemaining = Math.max(14000 - challengeData.totalSaved, 0);

            let message = `üìä Status Progress:\n\n`;
            message += `‚úÖ Hari selesai: ${completedDays}/7\n`;
            message += `üí∞ Total terkumpul: Rp ${challengeData.totalSaved.toLocaleString('id-ID')}\n`;
            message += `üéØ Target: Rp 14.000\n\n`;

            if (completedDays === 7 && challengeData.totalSaved >= 14000) {
                message += `üéâ CHALLENGE BERHASIL! Selamat!`;
            } else if (remainingDays > 0) {
                message += `üìÖ Sisa hari: ${remainingDays}\n`;
                message += `üí™ Butuh lagi: Rp ${targetRemaining.toLocaleString('id-ID')}`;
            } else {
                message += `‚ùå Challenge belum berhasil. Total masih kurang dari Rp 14.000`;
            }

            alert(message);
        }

        function resetChallenge() {
            if (confirm('Yakin ingin reset challenge? Semua progress akan hilang!')) {
                challengeData = {
                    days: [
                        { day: 1, amount: 0, completed: false },
                        { day: 2, amount: 0, completed: false },
                        { day: 3, amount: 0, completed: false },
                        { day: 4, amount: 0, completed: false },
                        { day: 5, amount: 0, completed: false },
                        { day: 6, amount: 0, completed: false },
                        { day: 7, amount: 0, completed: false }
                    ],
                    totalSaved: 0,
                    challengeComplete: false
                };

                document.getElementById('successMessage').style.display = 'none';
                renderDays();
                updateStats();
            }
        }

        // Add enter key support for amount input
        document.getElementById('amountInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                addSaving();
            }
        });

        // Format currency input
        document.getElementById('amountInput').addEventListener('input', function(e) {
            let value = e.target.value.replace(/[^\d]/g, '');
            if (value) {
                e.target.value = value;
            }
        });
    </script>
</body>
</html>