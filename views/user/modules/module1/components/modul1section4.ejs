<section id="m1s4" class="w-full py-10 px-4 md:px-10 rounded-2xl">
  <div class="rounded-3xl px-6 py-10 max-w-screen-xl mx-auto text-center bg-[var(--putih)] shadow-lg">
    <h2 class="text-3xl font-bold mb-3">Refleksi Pengeluaran Minggu Ini</h2>
    <p class="mb-8 text-gray-600 max-w-2xl mx-auto">Masukkan saldo awal, pemasukan, dan pengeluaran kamu secara terpisah. Lihat visualisasi real-time pengeluaranmu selama minggu ini.</p>

    <div class="flex flex-col md:flex-row gap-10 justify-center">
      <!-- Form Input -->
      <div class="flex-1 max-w-md bg-gray-50 p-6 rounded-xl shadow-md text-left">
        <h3 class="text-xl font-semibold mb-4">Tambah Data Keuangan</h3>
        <form id="finance-form" class="space-y-4">
          <div>
            <label for="type" class="block mb-1 font-medium">Jenis Transaksi</label>
            <select id="type" required class="w-full px-4 py-2 rounded border border-gray-300 focus:outline-none focus:ring-2 focus:ring-[var(--navy)]">
              <option value="" disabled selected>Pilih jenis transaksi</option>
              <option value="saldo">Saldo Awal</option>
              <option value="income">Pemasukan</option>
              <option value="expense">Pengeluaran</option>
            </select>
          </div>
          <div>
            <label for="desc" class="block mb-1 font-medium">Deskripsi</label>
            <input type="text" id="desc" placeholder="Misal: Gaji, Makan siang" required class="w-full px-4 py-2 rounded border border-gray-300 focus:outline-none focus:ring-2 focus:ring-[var(--navy)]" />
          </div>
          <div>
            <label for="amount" class="block mb-1 font-medium">Jumlah (Rp)</label>
            <input type="number" id="amount" placeholder="Misal: 500000" min="0" required class="w-full px-4 py-2 rounded border border-gray-300 focus:outline-none focus:ring-2 focus:ring-[var(--navy)]" />
          </div>
          <div>
            <label for="category" class="block mb-1 font-medium">Kategori (opsional)</label>
            <select id="category" class="w-full px-4 py-2 rounded border border-gray-300 focus:outline-none focus:ring-2 focus:ring-[var(--navy)]">
              <option value="" selected>Tidak ada kategori</option>
              <option value="Makanan">Makanan</option>
              <option value="Transportasi">Transportasi</option>
              <option value="Hiburan">Hiburan</option>
              <option value="Belanja">Belanja</option>
              <option value="Lainnya">Lainnya</option>
            </select>
          </div>
          <button type="submit" class="w-full bg-[var(--navy)] text-white py-3 rounded font-semibold hover:ring-[var(--navy)] transition">Tambah</button>
        </form>
      </div>

      <!-- Ringkasan & Grafik -->
      <div class="flex-1 max-w-lg bg-gray-50 p-6 rounded-xl shadow-md flex flex-col items-center">
        <div class="w-full mb-6 text-center">
          <h3 class="text-xl font-semibold mb-4">Ringkasan Keuangan</h3>
          <div class="grid grid-cols-2 gap-4 text-gray-700 font-semibold text-lg">
            <div>
              <p>Saldo Awal</p>
              <p id="balanceStart" class="text-[var(--navy)] text-2xl">Rp 0</p>
            </div>
            <div>
              <p>Pemasukan</p>
              <p id="income" class="text-green-500 text-2xl">Rp 0</p>
            </div>
            <div>
              <p>Pengeluaran</p>
              <p id="expense" class="text-red-500 text-2xl">Rp 0</p>
            </div>
            <div>
              <p>Saldo Akhir</p>
              <p id="balanceEnd" class="text-purple-700 text-2xl">Rp 0</p>
            </div>
          </div>
        </div>

        <canvas id="expenseChart" class="max-w-full" style="max-height: 300px;"></canvas>

        <div class="w-full mt-6 text-left">
          <h3 class="text-xl font-semibold mb-3">Daftar Transaksi</h3>
          <ul id="transaction-list" class="max-h-60 overflow-y-auto space-y-2">
            <!-- Transaksi muncul di sini -->
          </ul>
        </div>
      </div>
    </div>
  </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  let transactions = [];

  const form = document.getElementById('finance-form');
  const typeInput = document.getElementById('type');
  const descInput = document.getElementById('desc');
  const amountInput = document.getElementById('amount');
  const categoryInput = document.getElementById('category');

  const balanceStartEl = document.getElementById('balanceStart');
  const incomeEl = document.getElementById('income');
  const expenseEl = document.getElementById('expense');
  const balanceEndEl = document.getElementById('balanceEnd');
  const transactionList = document.getElementById('transaction-list');

  let chart;

  function renderTransactions() {
    transactionList.innerHTML = '';
    transactions.forEach((t, idx) => {
      const li = document.createElement('li');
      li.className = "flex justify-between items-center bg-white rounded px-4 py-2 shadow-sm";
      li.innerHTML = `
        <div>
          <p class="font-semibold">${t.desc} <span class="text-gray-500 text-sm">(${t.type}${t.category ? ', ' + t.category : ''})</span></p>
        </div>
        <div class="flex items-center space-x-4">
          <p class="${t.type === 'expense' ? 'text-red-600' : 'text-green-600'} font-semibold">Rp ${t.amount.toLocaleString()}</p>
          <button onclick="removeTransaction(${idx})" title="Hapus" class="text-red-500 hover:text-red-700 font-bold text-xl leading-none">&times;</button>
        </div>
      `;
      transactionList.appendChild(li);
    });
  }

  function updateSummary() {
    const saldoAwal = transactions.filter(t => t.type === 'saldo').reduce((a,b) => a + b.amount, 0);
    const income = transactions.filter(t => t.type === 'income').reduce((a,b) => a + b.amount, 0);
    const expense = transactions.filter(t => t.type === 'expense').reduce((a,b) => a + b.amount, 0);
    const saldoAkhir = saldoAwal + income - expense;

    balanceStartEl.textContent = `Rp ${saldoAwal.toLocaleString()}`;
    incomeEl.textContent = `Rp ${income.toLocaleString()}`;
    expenseEl.textContent = `Rp ${expense.toLocaleString()}`;
    balanceEndEl.textContent = `Rp ${saldoAkhir.toLocaleString()}`;
  }

  function updateChart() {
    const expenseByCategory = {};
    transactions.forEach(t => {
      if(t.type === 'expense') {
        const cat = t.category || 'Lainnya';
        expenseByCategory[cat] = (expenseByCategory[cat] || 0) + t.amount;
      }
    });

    const labels = Object.keys(expenseByCategory);
    const data = Object.values(expenseByCategory);

    if(chart) {
      chart.data.labels = labels;
      chart.data.datasets[0].data = data;
      chart.update();
    } else {
      const ctx = document.getElementById('expenseChart').getContext('2d');
      chart = new Chart(ctx, {
        type: 'doughnut',
        data: {
          labels: labels,
          datasets: [{
            label: 'Pengeluaran per Kategori',
            data: data,
            backgroundColor: ['#3b82f6', '#ef4444', '#f59e0b', '#10b981', '#8b5cf6'],
            borderWidth: 1,
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: { position: 'bottom' },
            tooltip: {
              callbacks: {
                label: ctx => `${ctx.label}: Rp ${ctx.parsed.toLocaleString()}`
              }
            }
          }
        }
      });
    }
  }

  function removeTransaction(idx) {
    transactions.splice(idx, 1);
    renderTransactions();
    updateSummary();
    updateChart();
  }

  form.addEventListener('submit', e => {
    e.preventDefault();
    const type = typeInput.value;
    const desc = descInput.value.trim();
    const amount = parseInt(amountInput.value);
    const category = categoryInput.value || '';

    if (!type || !desc || isNaN(amount) || amount <= 0) {
      alert('Mohon isi semua data dengan benar dan jumlah harus lebih dari 0.');
      return;
    }

    if(type === 'saldo' && transactions.some(t => t.type === 'saldo')) {
      alert('Saldo awal sudah diinput, tidak bisa menambah lagi.');
      return;
    }

    transactions.push({ type, desc, amount, category });
    form.reset();

    renderTransactions();
    updateSummary();
    updateChart();
  });

  renderTransactions();
  updateSummary();
  updateChart();
</script>
